from collections import defaultdict
import re
# solution for part 1
def part1(data):
    for k,v in data.items():
        print(k,":", v)
    
    ores = []
    spare = defaultdict(int)
    rec(data, "FUEL", 1,ores,spare, 1)
    print(spare)
    print(ores)


def rec(data, current, needed, ores,spare, mul):
    print(current)
    if data[current]["reac"][0][1] == "ORE":
        print("needed", needed, "gets", data[current]["val"])
        if spare[current] > needed:
            spare[current] -= needed
        else:
            spare[current] += data[current]["val"]-needed
            ores.append(data[current]["reac"][0][0])
        return

    for reac in data[current]["reac"]:
        rec(data, reac[1], reac[0], ores,spare)



# solution for part 2 

if __name__ == "__main__":
    data = {}
    with open("input.txt") as f:
        for line in f:
            line = line.strip()
            line = line.split("=>")
            strudels = line[0].split(",")
            product = line[1]
            for i,elem in enumerate(strudels):
                splitted = elem.split()
                strudels[i] = (int(splitted[0]), splitted[1])
            print(strudels)
            hax = product.split()
            product = hax[1]
            reactants = {"reac": strudels, "val": int(hax[0])}
            data[product] = reactants

    print(part1(data))
